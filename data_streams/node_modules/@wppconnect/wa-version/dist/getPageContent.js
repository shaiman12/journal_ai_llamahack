"use strict";
/*!
 * Copyright 2022 WPPConnect Team
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPageContent = void 0;
var fs = __importStar(require("fs"));
var path = __importStar(require("path"));
var semver = __importStar(require("semver"));
var constants_1 = require("./constants");
var getAvailableVersions_1 = require("./getAvailableVersions");
var getLatestVersion_1 = require("./getLatestVersion");
/**
 * Retorna o conteúdo da última versão disponível pela versão informada, aceitando regras semver
 * @param versionMatch Versão da página para retornar
 * @returns Conteúdo HTML da página
 */
function getPageContent(versionMatch, includePrerelease) {
    if (includePrerelease === void 0) { includePrerelease = true; }
    if (!versionMatch) {
        versionMatch = (0, getLatestVersion_1.getLatestVersion)();
    }
    var versions = (0, getAvailableVersions_1.getAvailableVersions)();
    var max = semver.maxSatisfying(versions, versionMatch, {
        includePrerelease: includePrerelease,
    });
    if (!max) {
        throw new Error("Version not available for ".concat(versionMatch));
    }
    return fs.readFileSync(path.join(constants_1.HTML_DIR, max + '.html'), {
        encoding: 'utf8',
    });
}
exports.getPageContent = getPageContent;
